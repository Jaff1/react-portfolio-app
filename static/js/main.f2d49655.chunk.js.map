{"version":3,"sources":["Components/About Eid 20180822_092525.jpg","Components/Home.js","Components/About.js","Components/Blog.js","Components/Portfolio.js","Components/Technology.js","Components/Intrests.js","Components/Contact.js","Components/NotFound.js","Components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","class","About","src","Eid","Alt","Blog","Portfolio","Technology","Contact","NotFound","Navigation","className","NavLink","to","App","HashRouter","Switch","Route","exact","path","component","Intrests","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2d49655.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/About Eid 20180822_092525.c70a93e3.jpg\";","import React from 'react';\r\nimport './Home.css';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <header>\r\n            <div class='Home'>\r\n                <h1>Home Page - something interesting </h1>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport Eid from './About Eid 20180822_092525.jpg';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1>About Jaff Page</h1>\r\n            <img src={Eid} Alt=\"Family Photo at Eid al-Adha 2018\"></img>\r\n            \r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport default function Blog() {\r\n    return (\r\n        <div>\r\n            <h1>Jaff's Tech Blog</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport default function Portfolio() {\r\n    return (\r\n        <div>\r\n            <h1>Jaff's Portfolio Page - erm... fill it up baby</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport default function Technology() {\r\n    return (\r\n        <div>\r\n            <h1>Jaff Loves His WiFi and other enabling Tecnology for good! Tech Stack</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1>About Jaff Page stuff about challenges maybe</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            <h1>Contact Jaff - maybee email maybee a form</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1> static Time stamp 08/02/2019 13:09:00 Ooops!... the page does not exist :(</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport{ NavLink } from 'react-router-dom';\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <div>\r\n            <p>Navigation Thingy Start</p>\r\n            <li className=\"liItem\"> <NavLink to='/'>Home </NavLink> </li>\r\n            <li className=\"liItem\"> <NavLink to='about'>About</NavLink> </li>\r\n            <li className=\"liItem\"> <NavLink to='blog'>Blog</NavLink> </li>\r\n            <li className=\"liItem\"> <NavLink to='portfolio'>Portfolio</NavLink> </li>\r\n            <li className=\"liItem\"> <NavLink to='technology'>Technology</NavLink> </li>\r\n            <li className=\"liItem\"> <NavLink to='intrests'>Intrests</NavLink> </li>\r\n            <li className=\"liItem\"> <NavLink to='contact'>Contact</NavLink> </li>\r\n            <p>Navigation Thingy End</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './Components/Home'\nimport About from './Components/About'\nimport Blog from './Components/Blog'\nimport Portfolio from './Components/Portfolio'\nimport Technology from './Components/Technology'\nimport Intrests from './Components/Intrests'\nimport Contact from './Components/Contact'\nimport NotFound from './Components/NotFound'\nimport Navigation from './Components/Navigation'\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/about' component={About} />\n            <Route exact path='/blog' component={Blog} />\n            <Route exact path='/portfolio' component={Portfolio} />\n            <Route exact path='/technology' component={Technology} />\n            <Route exact path='/portfolio' component={Portfolio} />\n            <Route exact path='/intrests' component={Intrests} />\n            <Route exact path='/contact' component={Contact} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}